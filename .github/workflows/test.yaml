name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc: ['8.8', '8.10', '9.0', '9.2', '9.4', '9.6', '9.8', '9.10']
        include:
          - os: macOS-13
            ghc: '9.4'
          - os: macOS-13
            ghc: '9.6'
          - os: windows-latest
            ghc: '9.4'
          - os: windows-latest
            ghc: '9.6'
          - os: windows-latest
            ghc: '9.8'
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -y update
        sudo apt-get -y install libtinfo6 libncurses6

    - name: Install GHCup
      uses: haskell/ghcup-setup@v1
      with:
        ghc: ${{ matrix.ghc }}
        cabal: latest

    - name: Build
      run: |
        set -eux
        cabal update
        cabal build --enable-tests
        cabal test
        cabal haddock
        cabal check
        cabal sdist
      shell: bash

  i386:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run build (32 bit linux)
        uses: docker://hasufell/i386-alpine-haskell:3.12
        with:
          args: sh -c "cabal update && cabal test"

  # We use github.com/haskell self-hosted runners for ARM testing.
  # If they become unavailable in future, put ['armv7', 'aarch64']
  # back to emulation jobs above.
  arm:
    runs-on: [self-hosted, Linux, ARM64]
    strategy:
      fail-fast: true
      matrix:
        arch: [arm32v7, arm64v8]
    steps:
      - uses: docker://hasufell/arm64v8-ubuntu-haskell:focal
        name: Cleanup
        with:
          args: "find . -mindepth 1 -maxdepth 1 -exec rm -rf -- {} +"

      - name: Checkout code
        uses: actions/checkout@v4

      - if: matrix.arch == 'arm32v7'
        uses: docker://hasufell/arm32v7-ubuntu-haskell:focal
        name: Run build (arm32v7 linux)
        with:
          args: sh -c "cabal update && ghcup install ghc --isolate=/usr --force 9.2.2 && cabal test -w ghc-9.2.2"

      - if: matrix.arch == 'arm64v8'
        uses: docker://hasufell/arm64v8-ubuntu-haskell:focal
        name: Run build (arm64v8 linux)
        with:
          args: sh -c "cabal update && ghcup install ghc --isolate=/usr --force 9.2.2 && cabal test -w ghc-9.2.2"

  darwin_arm:
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13
      HOMEBREW_CHANGE_ARCH_TO_ARM: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: [self-hosted, macOS, ARM64]
            ghc: 8.10.7
          - os: [self-hosted, macOS, ARM64]
            ghc: 9.2.8
          - os: [self-hosted, macOS, ARM64]
            ghc: 9.4.7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          bash .github/scripts/brew.sh git coreutils llvm@13 autoconf automake
          echo PATH="$HOME/.brew/bin:$HOME/.brew/sbin:$HOME/.brew/opt/llvm@13/bin:$PATH" >> "$GITHUB_ENV"
          echo CC="$HOME/.brew/opt/llvm@13/bin/clang" >> "$GITHUB_ENV"
          echo CXX="$HOME/.brew/opt/llvm@13/bin/clang++" >> "$GITHUB_ENV"
          echo LD=ld >> "$GITHUB_ENV"
          echo AR="$HOME/.brew/opt/llvm@13/bin/llvm-ar" >> "$GITHUB_ENV"
          echo RANLIB="$HOME/.brew/opt/llvm@13/bin/llvm-ranlib" >> "$GITHUB_ENV"

      - uses: haskell/ghcup-setup@v1
        with:
          ghc: ${{ matrix.ghc }}
          cabal: latest

      - name: Run build
        run: |
          cabal update
          cabal test

  freebsd:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: [self-hosted, FreeBSD, X64]
            ghc: 9.4.8
          - os: [self-hosted, FreeBSD, X64]
            ghc: 9.6.4
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          sudo pkg install -y curl gcc gmp gmake ncurses perl5 libffi libiconv git bash misc/compat10x misc/compat11x misc/compat12x gmake autoconf

      - name: Install GHCup
        uses: haskell/ghcup-setup@v1
        with:
          ghc: ${{ matrix.ghc }}
          cabal: latest

      - name: Run build
        run: |
          cabal update
          cabal test
